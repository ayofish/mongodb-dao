{"version":3,"file":"BaseDao.js","names":["_mongodb","require","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_regeneratorRuntime","n","hasOwnProperty","i","a","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","toPrimitive","String","Number","BaseDao","exports","config","dbClient","id","query","collection","head","data","error","sort","_id","pageSize","page","match","get","_page","set","_pageSize","_query","_collection","collectionName","db","dbName","idString","ObjectId","dataset","resetOutput","_find","_callee","obj","aggregationArr","_callee$","_context","dbRef","findOne","$match","$skip","$limit","aggregate","toArray","t0","message","find","_create","_callee2","insertedData","_callee2$","_context2","insertOne","insertedId","_x","_update","_callee3","origDataRes","_callee3$","_context3","findOneAndUpdate","$set","update","_x2","_delete2","_callee4","_callee4$","_context4","deleteOne","deletedCount","toHexString","fail","delete"],"sources":["../src/BaseDao.js"],"sourcesContent":["import { ObjectId } from \"mongodb\";\r\n/**\r\n * @class BaseDao\r\n * Base class for all api acess to mongodb\r\n */\r\nexport default class BaseDao {\r\n  /**\r\n   * @constructor\r\n   * @param {Object<mongo:Object<dbName: string, >>} config\r\n   * @param {MongoClient} dbClient instance of MongoDB Client\r\n   * @param {string} collectionName\r\n   */\r\n  constructor(config, dbClient) {\r\n    this.id = null;\r\n    this.query = null;\r\n    this.dbClient = dbClient;\r\n    this.config = config;\r\n    this.collection = config.collection ? config.collection : \"\";\r\n    //paginate data\r\n    this.head = {};\r\n    this.data = [];\r\n    this.error = [];\r\n    //aggregations\r\n    this.sort = config.sort ? config.sort : { _id: -1 };\r\n    this.pageSize = config.pageSize ? config.pageSize : 20;\r\n    this.page = 1;\r\n    this.match = {};\r\n  }\r\n\r\n  /**\r\n   * the page to view\r\n   * @param {Number} page\r\n   */\r\n  set page(page) {\r\n    if (!isNaN(page) && +page > 0) {\r\n      this._page = +page;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Number} pageSize\r\n   */\r\n  set pageSize(pageSize) {\r\n    if (!isNaN(pageSize) && +pageSize > 0) {\r\n      this._pageSize = +pageSize;\r\n    }\r\n  }\r\n  get page() {\r\n    return this._page;\r\n  }\r\n  get pageSize() {\r\n    return this._pageSize;\r\n  }\r\n  /**\r\n   * query params from call\r\n   * @param {Object<field: value>} query\r\n   */\r\n  set query(query) {\r\n    this._query = query;\r\n  }\r\n\r\n  get query() {\r\n    return this._query;\r\n  }\r\n\r\n  /**\r\n   * @param {String} collectionName\r\n   */\r\n  set collection(collectionName) {\r\n    this._collection = collectionName;\r\n  }\r\n\r\n  get collection() {\r\n    return this._collection;\r\n  }\r\n\r\n  // get offset(){\r\n\r\n  // }\r\n\r\n  /**\r\n   * @return {Object} database connection to collection\r\n   */\r\n  get dbRef() {\r\n    return this.dbClient.db(this.dbName).collection(this.collection);\r\n  }\r\n\r\n  /**\r\n   * Sets the ID for the instance.\r\n   * \r\n   * @param {string|ObjectId} idString - The ID to set. It can be either a string or an ObjectId.\r\n   * @throws {Object} Throws an error object if the provided ID string is less than 24 characters long.\r\n   */\r\n  set id(idString) {\r\n    if(idString instanceof ObjectId){\r\n      this._id = idString;\r\n    }else{\r\n      if (idString) {\r\n        if (idString.length >= 24) {\r\n          this._id = ObjectId(idString);\r\n        } else {\r\n          this._id = {\r\n            _id:\r\n              \"invalid id, must be at least 24 characters long,curr length \" +\r\n              idString.length,\r\n          };\r\n          throw this._id;\r\n        }\r\n      } else {\r\n        this._id = null;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @return {ObjectId} mongo database id in BSON Object\r\n   */\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * @return the output base object\r\n   */\r\n  get output() {\r\n    return {\r\n      head: {\r\n        page: this.page,\r\n        pageSize: this.pageSize,\r\n        length: this.data.length,\r\n        dataset: this.collection,\r\n      },\r\n      data: this.data,\r\n      error: this.error,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * reset the output parts\r\n   */\r\n  resetOutput() {\r\n    this.head = {};\r\n    this.data = [];\r\n    this.error = [];\r\n  }\r\n\r\n  /**\r\n   * @return output object data\r\n   */\r\n  async find() {\r\n    this.resetOutput();\r\n    try {\r\n      //id declared, just get one\r\n      if (this.id) {\r\n        const obj = await this.dbRef.findOne({_id: this.id});\r\n        if (obj) {\r\n          this.data = [obj];\r\n        }\r\n      } else {\r\n        // this.data = await this.dbRef.find().toArray();\r\n        let aggregationArr = [\r\n          { $match: this.match },\r\n          { $skip: (this.page - 1) * this.pageSize },\r\n          { $limit: this.pageSize },\r\n        ];\r\n        if (this.query) {\r\n          aggregationArr.push(this.query);\r\n        }\r\n        this.data = await this.dbRef\r\n          .aggregate(aggregationArr)\r\n          .sort(this.sort)\r\n          .toArray();\r\n        //change _id to id\r\n        // this.data.map(cleanMongoId);\r\n      }\r\n    } catch (ex) {\r\n      this.resetOutput();\r\n      this.error.push(ex.message);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * inserts data into the collection, overwrite this with your own implemntation for validation\r\n   * @param {Object} data for insert\r\n   */\r\n  async create(data) {\r\n    this.resetOutput();\r\n    if (data) {\r\n      try {\r\n        let insertedData = await this.dbRef.insertOne(data);\r\n        this.data = [\r\n          {\r\n            _id: insertedData.insertedId,\r\n            ...data,\r\n          },\r\n        ];\r\n      } catch (ex) {\r\n        this.resetOutput();\r\n        this.error.push(ex.message);\r\n      }\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Updates the document with the id set in the class attribute\r\n   * @param {Object} data for update\r\n   */\r\n  async update(data) {\r\n    this.resetOutput();\r\n    if (!this.id) {\r\n      throw \"id is required\";\r\n    }\r\n    if (!data) {\r\n      throw \"missing data\";\r\n    }\r\n    if (data) {\r\n      try {\r\n        let origDataRes = await this.dbRef.findOneAndUpdate(\r\n          { _id: this.id },\r\n          { $set: data }\r\n        );\r\n        this.data = [{ ...origDataRes.value, ...data }];\r\n      } catch (ex) {\r\n        this.resetOutput();\r\n        this.error.push(ex.message);\r\n      }\r\n    }\r\n    return this.data;\r\n  }\r\n  /**\r\n   * handles delete operations\r\n   */\r\n  async delete() {\r\n    this.resetOutput();\r\n    try {\r\n      //id declared, just get one\r\n      if (this.id) {\r\n        const obj = await this.dbRef.deleteOne({ _id: this.id });\r\n        if (obj.deletedCount) {\r\n          this.data = [{ id: this.id.toHexString() }];\r\n        } else {\r\n          //failed delete for some reason\r\n          this.error = [{ fail: this.id.toHexString() }];\r\n        }\r\n      } else {\r\n        this.error = [{ id: \"required\" }];\r\n        throw \"id is required\";\r\n      }\r\n    } catch (ex) {\r\n      this.resetOutput();\r\n      this.error.push(ex.message);\r\n    }\r\n    return this.data;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}